name: 🚀 Deploy to AlwaysData (native SSH)
on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      # Validate that all required secrets exist
      - name: Validate secrets
        shell: bash
        run: |
          set -e
          [ -n "${{ secrets.AD_HOST }}" ]    || { echo "❌ AD_HOST missing"; exit 1; }
          [ -n "${{ secrets.AD_USER }}" ]    || { echo "❌ AD_USER missing"; exit 1; }
          [ -n "${{ secrets.AD_PATH }}" ]    || { echo "❌ AD_PATH missing"; exit 1; }
          [ -n "${{ secrets.AD_SSH_KEY }}" ] || { echo "❌ AD_SSH_KEY missing"; exit 1; }
          echo "✅ All secrets are present"

      # Setup SSH key with proper permissions
      - name: Setup SSH key
        shell: bash
        env:
          SSH_KEY: ${{ secrets.AD_SSH_KEY }}
        run: |
          # Create SSH directory
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          # Write the private key
          echo "$SSH_KEY" > ~/.ssh/id_deploy
          chmod 600 ~/.ssh/id_deploy
          
          # Add host to known_hosts to avoid prompt
          ssh-keyscan -H ${{ secrets.AD_HOST }} >> ~/.ssh/known_hosts
          
          # Verify key format
          echo "🔑 SSH key info:"
          head -n 1 ~/.ssh/id_deploy
          echo "..."
          tail -n 1 ~/.ssh/id_deploy

      # Test SSH connection
      - name: Test SSH connectivity
        shell: bash
        run: |
          echo "🔍 Testing SSH connection..."
          ssh -i ~/.ssh/id_deploy -o StrictHostKeyChecking=no \
              ${{ secrets.AD_USER }}@${{ secrets.AD_HOST }} \
              "echo '✅ Connected as:' \$(whoami)@\$(hostname); \
               echo '📁 Creating target directory...'; \
               mkdir -p '${{ secrets.AD_PATH }}'; \
               echo '📝 Writing test file...'; \
               echo 'Deployment from GitHub Actions at' \$(date -u) > '${{ secrets.AD_PATH }}/_github_deploy.txt'"

      # Deploy files using rsync with SSH key
      - name: Deploy with rsync
        shell: bash
        run: |
          echo "🚀 Starting deployment..."
          rsync -avz --delete --progress \
            --exclude '.git/' \
            --exclude '.github/' \
            --exclude 'node_modules/' \
            --exclude '*.log' \
            -e "ssh -i ~/.ssh/id_deploy -o StrictHostKeyChecking=no" \
            ./ ${{ secrets.AD_USER }}@${{ secrets.AD_HOST }}:${{ secrets.AD_PATH }}/
          echo "✅ Deployment completed"

      # Verify deployment
      - name: Verify deployment
        shell: bash
        run: |
          echo "🔍 Verifying deployment..."
          ssh -i ~/.ssh/id_deploy -o StrictHostKeyChecking=no \
            ${{ secrets.AD_USER }}@${{ secrets.AD_HOST }} \
            "echo '📂 Contents of target directory:'; \
             ls -la '${{ secrets.AD_PATH }}' | head -20; \
             echo; \
             echo '📄 GitHub deployment marker:'; \
             cat '${{ secrets.AD_PATH }}/_github_deploy.txt' 2>/dev/null || echo 'Marker file not found'"

      # Cleanup
      - name: Cleanup
        shell: bash
        run: |
          rm -f ~/.ssh/id_deploy
          echo "🧹 SSH key cleaned up"

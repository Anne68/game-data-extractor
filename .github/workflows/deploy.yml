name: üöÄ Deploy to AlwaysData (native SSH)

on:
  push:
    branches: [ main ]          # adapte si ta branche par d√©faut n'est pas main
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: ‚úÖ Validate secrets (fail fast)
        run: |
          [ -n "${{ secrets.AD_HOST }}" ]    || { echo "‚ùå AD_HOST is empty"; exit 1; }
          [ -n "${{ secrets.AD_USER }}" ]    || { echo "‚ùå AD_USER is empty"; exit 1; }
          [ -n "${{ secrets.AD_PATH }}" ]    || { echo "‚ùå AD_PATH is empty"; exit 1; }
          [ -n "${{ secrets.AD_SSH_KEY }}" ] || { echo "‚ùå AD_SSH_KEY is empty"; exit 1; }
          echo "‚úÖ All secrets present"

      - name: üîë Write SSH key file
        shell: bash
        run: |
          umask 077
          cat > id_deploy <<'EOF'
          ${{ secrets.AD_SSH_KEY }}
          EOF
          ls -l id_deploy

      - name: üß™ Test SSH connectivity (verbose)
        shell: bash
        run: |
          ssh -vvv -o StrictHostKeyChecking=no \
              -i id_deploy ${{ secrets.AD_USER }}@${{ secrets.AD_HOST }} \
              'echo "Connected: $(whoami) on $(hostname)"; mkdir -p "${{ secrets.AD_PATH }}"; echo "From GitHub $(date -u)" > "${{ secrets.AD_PATH }}/_from_github.txt"'
          echo "‚úÖ SSH OK"

      - name: üì¶ Deploy with rsync
        shell: bash
        run: |
          rsync -az --delete \
            --exclude '.git/' \
            --exclude '.github/' \
            -e "ssh -o StrictHostKeyChecking=no -i id_deploy" \
            ./ ${{ secrets.AD_USER }}@${{ secrets.AD_HOST }}:${{ secrets.AD_PATH }}/
          echo "‚úÖ Files synced"

      - name: üîç List target directory
        shell: bash
        run: |
          ssh -o StrictHostKeyChecking=no -i id_deploy \
            ${{ secrets.AD_USER }}@${{ secrets.AD_HOST }} \
            "ls -al '${{ secrets.AD_PATH }}'; echo; cat '${{ secrets.AD_PATH }}/_from_github.txt' || true"

name: üöÄ Deploy to AlwaysData (native SSH)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # V√©rifie que les secrets existent (sinon on fail tout de suite)
      - name: Validate secrets
        shell: bash
        run: |
          set -e
          [ -n "${{ secrets.AD_HOST }}" ]    || { echo "AD_HOST missing"; exit 1; }
          [ -n "${{ secrets.AD_USER }}" ]    || { echo "AD_USER missing"; exit 1; }
          [ -n "${{ secrets.AD_PATH }}" ]    || { echo "AD_PATH missing"; exit 1; }
          [ -n "${{ secrets.AD_SSH_KEY }}" ] || { echo "AD_SSH_KEY missing"; exit 1; }
          echo "Secrets OK"

      # On place la cl√© priv√©e dans un fichier avec permissions 600
      - name: Write SSH key file
        shell: bash
        env:
          SSH_KEY: ${{ secrets.AD_SSH_KEY }}
        run: |
          umask 077
          printf '%s\n' "$SSH_KEY" > id_deploy
          ls -l id_deploy
          head -n 1 id_deploy || true
          tail -n 1 id_deploy || true

      # Test de connexion tr√®s verbeux pour diagnostiquer si besoin
      - name: Test SSH connectivity (verbose)
        shell: bash
        run: |
          ssh -vvv -o StrictHostKeyChecking=no \
              -i id_deploy ${{ secrets.AD_USER }}@${{ secrets.AD_HOST }} \
              "echo CONNECTED: \$(whoami)@\$(hostname); mkdir -p '${{ secrets.AD_PATH }}'; echo 'From GitHub ' \$(date -u) > '${{ secrets.AD_PATH }}/_from_github.txt'"

      # D√©ploiement (rsync) ‚Äî supprime ce bloc si tu veux juste tester la connexion
      - name: Deploy with rsync
        shell: bash
        run: |
          rsync -az --delete \
            --exclude '.git/' \
            --exclude '.github/' \
            -e "ssh -o StrictHostKeyChecking=no -i id_deploy" \
            ./ ${{ secrets.AD_USER }}@${{ secrets.AD_HOST }}:${{ secrets.AD_PATH }}/

      # Liste c√¥t√© serveur (pour confirmer)
      - name: List target dir
        shell: bash
        run: |
          ssh -o StrictHostKeyChecking=no -i id_deploy \
            ${{ secrets.AD_USER }}@${{ secrets.AD_HOST }} \
            "ls -al '${{ secrets.AD_PATH }}'; echo; cat '${{ secrets.AD_PATH }}/_from_github.txt' || true"

name: ‚è∞ Scheduled Data Extraction (Incremental Updates)
on:
  schedule:
    # Mise √† jour incr√©mentale quotidienne
    - cron: '0 4 * * *'   # 06:00 Paris - Mise √† jour incr√©mentale
    - cron: '0 16 * * *'  # 18:00 Paris - Mise √† jour incr√©mentale
    # Scraping prix uniquement
    - cron: '0 10 * * *'  # 12:00 Paris - Prix uniquement
    # Maintenance hebdomadaire
    - cron: '0 0 * * 0'   # 02:00 Dimanche - Maintenance
  workflow_dispatch:
    inputs:
      extraction_type:
        description: "Type d'extraction"
        required: true
        default: 'incremental'
        type: choice
        options:
        - incremental # Mise √† jour + 100 nouveaux jeux + prix auto
        - games       # Jeux uniquement (nouvelle extraction)
        - prices      # Prix uniquement
        - maintenance # Maintenance syst√®me
        - status      # Afficher le statut
      games_limit:
        description: "Limite nombre de jeux (pour games seulement)"
        required: false
        default: '100'
        type: string

jobs:
  extract:
    runs-on: ubuntu-latest
    
    steps:
    - name: üöÄ Run incremental extraction on AlwaysData
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.AD_HOST }}
        username: ${{ secrets.AD_USER }}
        key: ${{ secrets.AD_SSH_KEY }}
        script: |
          echo "üîç Pre-flight checks..."
          
          # V√©rifier que le projet existe
          if [ ! -d ~/game-extraction ]; then
            echo "‚ùå Project directory ~/game-extraction not found!"
            exit 1
          fi
          
          cd ~/game-extraction
          
          # V√©rifier que les scripts existent
          if [ ! -f scripts/run_extraction.py ]; then
            echo "‚ùå Script scripts/run_extraction.py not found!"
            exit 1
          fi
          
          if [ ! -f scripts/incremental_update.py ]; then
            echo "‚ùå Script scripts/incremental_update.py not found!"
            echo "üìã Creating incremental update script..."
            # Le script sera cr√©√© via le d√©ploiement
            exit 1
          fi
          
          # Variables d'environnement
          export DB_HOST="${{ secrets.DB_HOST }}"
          export DB_USER="${{ secrets.DB_USER }}"
          export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          export DB_NAME="${{ secrets.DB_NAME }}"
          export RAWG_API_KEY="${{ secrets.RAWG_API_KEY }}"
          export DISCORD_WEBHOOK="${{ secrets.DISCORD_WEBHOOK }}"
          export NOTIFICATION_EMAIL="${{ secrets.NOTIFICATION_EMAIL }}"
          export LOG_LEVEL="INFO"
          export HEADLESS_MODE="true"
          export SCRAPING_ENABLED="true"
          export PRICE_SCRAPING_SIMULATION="true"
          
          # D√©terminer le type d'op√©ration
          SCHEDULE_TYPE="${{ github.event.schedule }}"
          MANUAL_TYPE="${{ github.event.inputs.extraction_type }}"
          GAMES_LIMIT="${{ github.event.inputs.games_limit }}"
          
          echo "üìä Schedule type: '$SCHEDULE_TYPE'"
          echo "üìä Manual type: '$MANUAL_TYPE'"
          echo "üìä Games limit: '$GAMES_LIMIT'"
          
          # Afficher le statut actuel avant l'op√©ration
          echo "üìã Statut actuel de la base de donn√©es:"
          python3 scripts/run_extraction.py --status
          echo ""
          
          # Construire et ex√©cuter la commande
          if [[ "$SCHEDULE_TYPE" == "0 4 * * *" ]] || [[ "$SCHEDULE_TYPE" == "0 16 * * *" ]]; then
            echo "‚è∞ Mise √† jour incr√©mentale programm√©e..."
            python3 scripts/run_extraction.py --incremental
            
          elif [[ "$SCHEDULE_TYPE" == "0 10 * * *" ]]; then
            echo "‚è∞ Scraping prix programm√©..."
            python3 scripts/run_extraction.py --prices-only --prices-limit 50
            
          elif [[ "$SCHEDULE_TYPE" == "0 0 * * 0" ]]; then
            echo "‚è∞ Maintenance programm√©e..."
            python3 scripts/run_extraction.py --maintenance
            
          elif [[ "$MANUAL_TYPE" == "incremental" ]]; then
            echo "üñ±Ô∏è Mise √† jour incr√©mentale manuelle..."
            if [ -n "$GAMES_LIMIT" ] && [ "$GAMES_LIMIT" != "100" ]; then
              python3 scripts/run_extraction.py --incremental --games-limit "$GAMES_LIMIT"
            else
              python3 scripts/run_extraction.py --incremental
            fi
            
          elif [[ "$MANUAL_TYPE" == "games" ]]; then
            echo "üñ±Ô∏è Extraction jeux manuelle..."
            if [ -n "$GAMES_LIMIT" ]; then
              python3 scripts/run_extraction.py --games-only --games-limit "$GAMES_LIMIT"
            else
              python3 scripts/run_extraction.py --games-only --games-limit 100
            fi
            
          elif [[ "$MANUAL_TYPE" == "prices" ]]; then
            echo "üñ±Ô∏è Scraping prix manuel..."
            python3 scripts/run_extraction.py --prices-only --prices-limit 50
            
          elif [[ "$MANUAL_TYPE" == "maintenance" ]]; then
            echo "üñ±Ô∏è Maintenance manuelle..."
            python3 scripts/run_extraction.py --maintenance
            
          elif [[ "$MANUAL_TYPE" == "status" ]]; then
            echo "üñ±Ô∏è Affichage statut..."
            python3 scripts/run_extraction.py --status
            
          else
            echo "üîß Par d√©faut: mise √† jour incr√©mentale..."
            python3 scripts/run_extraction.py --incremental
          fi
          
          # Afficher les statistiques finales apr√®s l'op√©ration
          echo ""
          echo "üìä Statistiques finales:"
          python3 scripts/run_extraction.py --status

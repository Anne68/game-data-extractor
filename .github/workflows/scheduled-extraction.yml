name: ‚è∞ Scheduled Data Extraction (FIXED)
on:
  schedule:
    - cron: '0 4 * * *'
    - cron: '0 16 * * *'
    - cron: '0 10 * * *'
    - cron: '0 0 * * 0'
  workflow_dispatch:
    inputs:
      extraction_type:
        description: "Type d'extraction"
        required: true
        default: 'games'
        type: choice
        options:
        - games
        - prices
        - full
        - maintenance

jobs:
  extract:
    runs-on: ubuntu-latest
    
    steps:
    - name: üöÄ Run extraction on AlwaysData
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.AD_HOST }}
        username: ${{ secrets.AD_USER }}
        key: ${{ secrets.AD_SSH_KEY }}
        script: |
          echo "üîç Pre-flight checks..."
          
          # V√©rifier que le projet existe
          if [ ! -d ~/game-extraction ]; then
            echo "‚ùå Project directory ~/game-extraction not found!"
            echo "üìã Please run the deployment workflow first"
            exit 1
          fi
          
          cd ~/game-extraction
          
          # V√©rifier que le script existe
          if [ ! -f scripts/run_extraction.py ]; then
            echo "‚ùå Script scripts/run_extraction.py not found!"
            echo "üìÇ Current directory contents:"
            ls -la
            exit 1
          fi
          
          # V√©rifier Python et les d√©pendances
          echo "üêç Python version: $(python3 --version)"
          
          # Exporter les variables d'environnement pour AlwaysData
          export DB_HOST="${{ secrets.DB_HOST }}"
          export DB_USER="${{ secrets.DB_USER }}"
          export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          export DB_NAME="${{ secrets.DB_NAME }}"
          export RAWG_API_KEY="${{ secrets.RAWG_API_KEY }}"
          export LOG_LEVEL="INFO"
          export HEADLESS_MODE="true"
          
          # D√©terminer le type d'extraction √† ex√©cuter
          SCHEDULE_TYPE=""
          MANUAL_TYPE=""
          
          # Variables GitHub ne sont pas toujours disponibles, utilisons des conditions plus robustes
          if [ -n "${{ github.event.schedule }}" ]; then
            SCHEDULE_TYPE="${{ github.event.schedule }}"
          fi
          
          if [ -n "${{ github.event.inputs.extraction_type }}" ]; then
            MANUAL_TYPE="${{ github.event.inputs.extraction_type }}"
          fi
          
          echo "üìä Schedule type: '$SCHEDULE_TYPE'"
          echo "üìä Manual type: '$MANUAL_TYPE'"
          
          # Logique d'ex√©cution
          if [[ "$SCHEDULE_TYPE" == "0 4 * * *" ]] || [[ "$SCHEDULE_TYPE" == "0 16 * * *" ]]; then
            echo "‚è∞ Running scheduled games extraction..."
            python3 scripts/run_extraction.py --games-only --limit 500
          elif [[ "$SCHEDULE_TYPE" == "0 10 * * *" ]]; then
            echo "‚è∞ Running scheduled prices extraction..."
            python3 scripts/run_extraction.py --prices-only --limit 50
          elif [[ "$SCHEDULE_TYPE" == "0 0 * * 0" ]]; then
            echo "‚è∞ Running scheduled maintenance..."
            python3 scripts/run_extraction.py --maintenance
          elif [[ "$MANUAL_TYPE" == "games" ]]; then
            echo "üñ±Ô∏è Manual games extraction..."
            python3 scripts/run_extraction.py --games-only --limit 500
          elif [[ "$MANUAL_TYPE" == "prices" ]]; then
            echo "üñ±Ô∏è Manual prices extraction..."
            python3 scripts/run_extraction.py --prices-only --limit 50
          elif [[ "$MANUAL_TYPE" == "full" ]]; then
            echo "üñ±Ô∏è Manual full extraction..."
            python3 scripts/run_extraction.py --full --limit 200
          elif [[ "$MANUAL_TYPE" == "maintenance" ]]; then
            echo "üñ±Ô∏è Manual maintenance..."
            python3 scripts/run_extraction.py --maintenance
          else
            echo "üîß Default: running games extraction..."
            python3 scripts/run_extraction.py --games-only --limit 100
          fi
